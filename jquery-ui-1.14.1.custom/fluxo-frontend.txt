Dados > Envia os dados backend> processa back> Recebe dados FrontEnd > Guarda os dados para preencher alguma coisa a mais, envia os dados atualizados > Envia dados Backend > Grava os dados > Recebe resposta no FrontEnd


Como fazer isso
	....
	Vc faz assim
E se eu pegar isso e fazer mais aquilo
	....
	Vc faz desse outro jeito


Entrada dos dados: {
	Pergunta Secreta: Qual sua cor favorita?
	Resposta Secreta: Verde
	Email: wenega@wenega.com
	Documento: 12345678911
}

JPQL: {
	Select c from Contact c
	where c.user.email = 'wenega@wenega' 
	and c.document = '12345678911' 
	and c.perguntaSecreta = 'Qual sua cor favorita?' 
	and c.respostaSecreta = 'Verde';
}
Tradução para SQL: {
	Select * from TBL_WENSHOP_CONTACT c
	inner join TBL_WENSHOP_USER u on c.id_user = u.id
	inner join TBL_WENSHOP_PERFIL p on p.id = u.id_perfil
	where u.email = 'wenega@wenega' 
	and c.documento = '12345678911' 
	and c.pergunta = 'Qual sua cor favorita?' 
	and c.resposta_pergunta = 'Verde';
}

JPA: {
	Contact:
		long id;
		String nome;
		String documento;
		String Endereço;
		String cep;
		String perguntaSecreta;
		String respostaSecreta;
		String complemento;
		String telefone;
		String pontoReferencia;
		User   user;

	User:
		long id;
		String email;
		String senha;
		Perfil perfil;

	Perfil:
		long id;
		String nome;
}		


RESULTADO:
{
	Contact:{
		id: 1
		nome: Wenega Alex
		documento: 12345678911
		Endereço: Rua 123
		cep: 00000000
		perguntaSecreta: Qual sua cor favorita?
		respostaSecreta: Verde
		complemento: null
		telefone: 41123456789
		pontoReferencia: null
		user: {
			id: 1
			email: wenega@wenega
			senha: @#&!*@(#AYHS
			perfil: {
				id: 1
				nome: ADMINISTRADOR 
			}
		}
	}
}



RETORNO PARA O SERVIÇO{
	contato = ContactDAO.findByEmailPerguntaRepostaDocumento(......);
	User u =  contato.getUser();	
	
	return u;
}



TELA{
	Vai ter os campos:
		Pergunta Secreta: Qual sua cor favorita?
		Resposta Secreta: Verde
		Email: wenega@wenega.com
		Documento: 12345678911	

	chama o serviço GET  vai retornar o json (GET):
	user: {
		id: 1
		email: wenega@wenega
		senha: @#&!*@(#AYHS
		perfil: {
			id: 1
			nome: ADMINISTRADOR 
		}
	}
	Guarda as informações para mandar novamente para outro serviço (put) os dados do user,	
	Se retornou o user entao deixa seguir para a proxima etapa:

		Nova senha: 12345
		Repita a senha: 12345
		
		Enviar via put 
		user: {
			id: 1
			email: wenega@wenega
			senha: 12345
			perfil: {
				id: 1
				nome: ADMINISTRADOR 
			}
		}
	
}


SERVIÇO REST API (PUT){

	User u = new User();
	u.setId(tela.id());
	u.setemail(tela.email());
	u.setPassword(encodeBase64(tela.senha));
	Perfil p = new Perfil();
	p.setId(tela.perfil.id());
	p.setNome(tela.perfil.nome());
	
	u.setPerfil(p);
	
	EntityUser e;
	e.persist(u);
}